---
- name: Check whether ruby is installed
  ansible.builtin.command: ruby -v
  register: ruby_installed
  changed_when: false
  ignore_errors: true
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

- name: Install Core DNF Plugins
  ansible.builtin.dnf:
    name: dnf-plugins-core

- name: Check if CodeReady Builder repository is enabled (CentOS Stream 9)
  ansible.builtin.shell:
    cmd: dnf repolist enabled | grep -qw crb
  register: crb_check
  changed_when: false
  ignore_errors: true

- name: Enable CodeReady Builder repository (CentOS Stream 9)
  ansible.builtin.command:
    cmd: dnf config-manager --set-enabled crb
  changed_when: crb_check.rc != 0
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version == "9"
    - crb_check.rc != 0

- name: Install packages required to build ruby.
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - bzip2
    - gcc
    - gdbm-devel
    - git
    - libffi-devel
    - make
    - ncurses-devel
    - openssl-devel
    - readline-devel
    - wget
    - libyaml-devel
    - zlib-devel
  when: ruby_installed is failed

- name: Download ruby.
  ansible.builtin.get_url:
    url: "{{ ruby_download_url }}"
    dest: "{{ workspace }}/ruby-{{ ruby_version }}.tar.gz"
    mode: 0755
    owner: root
    group: root
  when: ruby_installed is failed

- name: Extract ruby.
  ansible.builtin.unarchive:
    src: "{{ workspace }}/ruby-{{ ruby_version }}.tar.gz"
    dest: "{{ workspace }}/"
    copy: false
    mode: 0755
  when: ruby_installed is failed

- name: Create Makefile.
  ansible.builtin.command: ./configure --enable-shared
  register: makefile_created
  changed_when: makefile_created.rc == 0
  args:
    chdir: "{{ workspace }}/ruby-{{ ruby_version }}"
  when: ruby_installed is failed

- name: Build ruby 1/2.
  community.general.make:
    chdir: "{{ workspace }}/ruby-{{ ruby_version }}"
    params:
      PREFIX: "{{ ruby_make_prefix }}"
  when: ruby_installed is failed

- name: Build ruby 2/2.
  community.general.make:
    chdir: "{{ workspace }}/ruby-{{ ruby_version }}"
    target: install
    params:
      PREFIX: "{{ ruby_make_prefix }}"
  when: ruby_installed is failed

- name: Add ruby symlinks.
  ansible.builtin.file:
    src: "/usr/local/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: link
    force: true
  with_items:
    - erb
    - gem
    - irb
    - rake
    - rdoc
    - ruby
  when: ruby_installed is failed
